{% extends molecule('quick-order-file-upload', '@SprykerShop:QuickOrderPage') %}

{% define config = {
    tag: 'quick-order-file-upload',
} %}

{% define data = {
    fileTemplateExtensions: null,
} %}

{% define attributes = {
    'input-file-id': data.uploadOrderForm.children.fileUploadOrder.vars.id,
} %}

{% block body %}
    <div class="{{ config.name }}__content">{{ parent() }}</div>
{% endblock %}

{% block title %}
    <h5 class="{{ config.name }}__title spacing-bottom">{{ 'quick-order.file-upload-order.title' | trans }}</h5>
{% endblock %}

{% block text %}{% endblock %}

{% block uploadOrderForm %}
    {% embed molecule('form') with {
        modifiers: ['browse-file'],
        data: {
            form: data.uploadOrderForm,
            enableStart: false,
            enableEnd: false,
        },
        embed: {
            fileTemplateExtensions: data.fileTemplateExtensions,
            parentClass: config.name,
            parentJsClass: config.jsName,
        },
    } only %}
        {% block fields %}
            {{ parent() }}

            <label class="label label--browse-file spacing-bottom spacing-bottom--reset {{ embed.parentJsClass }}__browse-file"
                   for="{{ data.form.children.fileUploadOrder.vars.id }}">
                <span class="{{ embed.parentClass }}__browse-file-info">
                    {% include atom('icon') with {
                        class: 'spacing-bottom',
                        modifiers: ['browse-file'],
                        data: {
                            name: 'browse-file',
                        },
                    } only %}

                    <span class="{{ embed.parentClass }}__file-select text-center">
                        <span class="{{ embed.parentJsClass }}__file-select">
                            {{ 'quick-order.upload-order.browse-file' | trans }}
                        </span>

                        {% include atom('icon') with {
                            class: 'is-hidden ' ~ embed.parentJsClass ~ '__remove-file',
                            modifiers: ['small', 'remove-file'],
                            data: {
                                name: 'cross',
                            },
                        } only %}
                    </span>

                    {% if embed.fileTemplateExtensions is not null %}
                        {% set fileExtensions = [] %}
                        {% for fileExtension in embed.fileTemplateExtensions %}
                            {% set fileExtensions = fileExtensions | merge(['.' ~ fileExtension]) %}
                        {% endfor %}
                        {% set fileExtensions = '<strong>' ~ fileExtensions | join(', ') ~ '</strong>' %}

                        <span class="{{ embed.parentJsClass }}__file-extension">
                            {{ 'quick-order.upload-order.allowed-file-extensions' | trans({'%extensions%': fileExtensions}) | raw }}
                        </span>
                    {% endif %}
                </span>
            </label>
        {% endblock %}
    {% endembed %}
{% endblock %}

{% block button %}
    <button name="uploadOrder" class="button button--success spacing-top spacing-top--big">
        {{ 'quick-order.file-upload-order.button.upload' | trans }}
    </button>
{% endblock %}

{% block fileTemplate %}
    {% if data.fileTemplateExtensions %}
        <div class="grid grid--gap grid--center spacing-top">
            {% for fileTemplateExtension in data.fileTemplateExtensions %}
                <div class="col col--sm-10 spacing-top">
                    <a class="{{ config.name }}__download-link" href="{{ path('quick-order/download-template', {'file-type': fileTemplateExtension}) }}">
                        {% include atom('icon') with {
                            modifiers: ['download-file'],
                            data: {
                                name: 'download-file',
                            },
                        } only %}

                        {{ 'quick-order.file-upload-order.file-template-download-message' | trans({'%template%': fileTemplateExtension})}}
                    </a>
                </div>
            {% endfor %}
        </div>
    {% endif %}
{% endblock %}
